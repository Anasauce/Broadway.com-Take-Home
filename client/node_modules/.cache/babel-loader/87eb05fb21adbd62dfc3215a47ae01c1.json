{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anasauceda/Downloads/Broadwaycom-Api-Assignment/code-assignments-react-and-apis/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anasauceda/Downloads/Broadwaycom-Api-Assignment/code-assignments-react-and-apis/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\n// export const getFavoriteShowsByUserId = async userId => {\n//     let response;\n//     try {\n//         response = await fetch(`http://localhost:3000/users/${userId}`);\n//     } catch (ex) {\n//         console.log(\"EX\", ex)\n//         return this.setState({\n//             loading: false,\n//             error: ex\n//          })\n//     }\n//     if (!response.ok) {\n//         console.log(\"error!\", response)\n//         return this.setState({\n//             loading: false,\n//             error: response\n//         }) \n//     }\n//     const user = await response.json();\n//     console.log(\"HIII\", user.shows)\n//     return user.shows\n// }\nexport var getFavoriteShowsByUserId =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(userId) {\n    var response, user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"http://localhost:3000/users/\".concat(userId));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"EX\", _context.t0);\n            return _context.abrupt(\"return\", _this.setState({\n              loading: false,\n              error: _context.t0\n            }));\n\n          case 10:\n            if (response.ok) {\n              _context.next = 13;\n              break;\n            }\n\n            console.log(\"error!\", response);\n            return _context.abrupt(\"return\", _this.setState({\n              loading: false,\n              error: response\n            }));\n\n          case 13:\n            _context.next = 15;\n            return response.json();\n\n          case 15:\n            user = _context.sent;\n            console.log(\"HIII\", user.shows);\n            return _context.abrupt(\"return\", user.shows);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function getFavoriteShowsByUserId(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/anasauceda/Downloads/Broadwaycom-Api-Assignment/code-assignments-react-and-apis/src/helpers.js"],"names":["getFavoriteShowsByUserId","userId","fetch","response","console","log","setState","loading","error","ok","json","user","shows"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA,OAAO,IAAMA,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGfC,KAAK,uCAAgCD,MAAhC,EAHU;;AAAA;AAGhCE,YAAAA,QAHgC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKhCC,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AALgC,6CAMzB,KAAI,CAACC,QAAL,CAAc;AACjBC,cAAAA,OAAO,EAAE,KADQ;AAEjBC,cAAAA,KAAK;AAFY,aAAd,CANyB;;AAAA;AAAA,gBAW/BL,QAAQ,CAACM,EAXsB;AAAA;AAAA;AAAA;;AAYhCL,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;AAZgC,6CAazB,KAAI,CAACG,QAAL,CAAc;AACjBC,cAAAA,OAAO,EAAE,KADQ;AAEjBC,cAAAA,KAAK,EAAEL;AAFU,aAAd,CAbyB;;AAAA;AAAA;AAAA,mBAmBjBA,QAAQ,CAACO,IAAT,EAnBiB;;AAAA;AAmB9BC,YAAAA,IAnB8B;AAoBpCP,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAAI,CAACC,KAAzB;AApBoC,6CAqB7BD,IAAI,CAACC,KArBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBZ,wBAAwB;AAAA;AAAA;AAAA,GAA9B","sourcesContent":["// export const getFavoriteShowsByUserId = async userId => {\n//     let response;\n//     try {\n//         response = await fetch(`http://localhost:3000/users/${userId}`);\n//     } catch (ex) {\n//         console.log(\"EX\", ex)\n//         return this.setState({\n//             loading: false,\n//             error: ex\n//          })\n//     }\n//     if (!response.ok) {\n//         console.log(\"error!\", response)\n//         return this.setState({\n//             loading: false,\n//             error: response\n//         }) \n//     }\n\n//     const user = await response.json();\n//     console.log(\"HIII\", user.shows)\n//     return user.shows\n\n// }\n\n\n\n\nexport const getFavoriteShowsByUserId = async userId => {\n    let response;\n    try {\n        response = await fetch(`http://localhost:3000/users/${userId}`);\n    } catch (ex) {\n        console.log(\"EX\", ex)\n        return this.setState({\n            loading: false,\n            error: ex\n         })\n    }\n    if (!response.ok) {\n        console.log(\"error!\", response)\n        return this.setState({\n            loading: false,\n            error: response\n        }) \n    }\n\n    const user = await response.json();\n    console.log(\"HIII\", user.shows)\n    return user.shows\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}